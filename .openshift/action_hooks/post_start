#!/bin/bash


# The logic to start up your application should be put in this
# script.

# nginx will work only if it binds to $OPENSHIFT_INTERNAL_IP:8080
# Replace the $OPENSHIFT_INTERNAL_IP and $OPENSHIFT_INTERNAL_PORT before starting up the server
sed -e "s|\$OPENSHIFT_IP:\$OPENSHIFT_PORT|$OPENSHIFT_PYTHON_IP:$OPENSHIFT_PYTHON_PORT|" \
-e "s|\$OPENSHIFT_DATA|$OPENSHIFT_DATA_DIR|" \
$OPENSHIFT_DATA_DIR/conf/nginx.conf.template > $OPENSHIFT_DATA_DIR/conf/nginx.conf

# Start nginx, and make it immune to SIGHUP (Hang UP signals) from any shells
# after they exit
nohup $OPENSHIFT_DATA_DIR/sbin/nginx > $OPENSHIFT_PYTHON_LOG_DIR/server.log 2>&1 &


# Python scrapers save the JSONs in persistent storage, but Openshift's Apache
# builtin serves static files in the `wsgi` directory of the app repo; serve!
ln -sf $OPENSHIFT_DATA_DIR/json $OPENSHIFT_REPO_DIR/wsgi/static/json


### If a new spreadsheet.docx is pushed, re-run spreadsheet.py ##

generate_clubs ()
{
    cd $OPENSHIFT_REPO_DIR
    python -m dascraper.clubs
    mv clubs.json $OPENSHIFT_DATA_DIR/json
}

# Save a checksum if one does not already exist
if [[ ! -f $OPENSHIFT_DATA_DIR/clubs.json.cksum ]]; then
    cksum $OPENSHIFT_REPO_DIR/dascraper/clubs/spreadsheet.docx > $OPENSHIFT_DATA_DIR/spreadsheet.docx.cksum
else
    # A checksum already exists, so check it against the checksum of a new clubs.json
    if [[ $(cat $OPENSHIFT_DATA_DIR/spreadsheet.docx.cksum) != \
        $(cksum $OPENSHIFT_REPO_DIR/dascraper/clubs/spreadsheet.docx) ]]; then
        generate_clubs
    fi
fi
